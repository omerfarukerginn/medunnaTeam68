Index: src/test/java/utilities/ReadTxt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utilities;\r\n\r\nimport pojos.Appointment;\r\n\r\nimport pojos.CTestItem;\r\n\r\nimport pojos.Physician;\r\n\r\nimport pojos.Registrant;\r\nimport pojos.Room;\r\nimport pojos.Staff;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ReadTxt {\r\n\r\n\r\n    public static List<String> getSSNIDs() {\r\n        List<String> list = new ArrayList<>();\r\n\r\n\r\n        try {\r\n\r\n            //identify file location\r\n            FileReader fileReader = new FileReader(ConfigReader.getProperty(\"database_registrant_data\"));\r\n\r\n            //Read the records of the file in given location\r\n            BufferedReader br = new BufferedReader(fileReader);\r\n\r\n            String line = br.readLine();//856-45-6789,\r\n\r\n            while (line != null) {\r\n\r\n                String ssn = line.split(\",\")[0];\r\n                list.add(ssn);\r\n\r\n                line = br.readLine();\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n\r\n            e.printStackTrace();\r\n\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n\r\n    public static List<String> getAPISSNIDs() {\r\n        List<String> list = new ArrayList<>();\r\n\r\n\r\n        try {\r\n\r\n            //identify file location\r\n            FileReader fileReader = new FileReader(ConfigReader.getProperty(\"api_all_registrant_data\"));\r\n\r\n            //Read the records of the file in given location\r\n            BufferedReader br = new BufferedReader(fileReader);\r\n\r\n            String line = br.readLine();//856-45-6789,\r\n\r\n            while (line != null) {\r\n\r\n                String ssn = line.split(\",\")[2];\r\n                list.add(ssn);\r\n\r\n                line = br.readLine();\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n\r\n            e.printStackTrace();\r\n\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n\r\n    public static List<Registrant> getAllRegistrants() {\r\n        List<Registrant> list = new ArrayList<>();\r\n\r\n\r\n        try {\r\n\r\n            //identify file location\r\n            FileReader fileReader = new FileReader(ConfigReader.getProperty(\"api_all_registrant_data\"));\r\n\r\n            //Read the records of the file in given location\r\n            BufferedReader br = new BufferedReader(fileReader);\r\n\r\n            String line = br.readLine();//856-45-6789,\r\n\r\n            while (line != null) {\r\n                Registrant registrant = new Registrant();\r\n\r\n\r\n                registrant.setFirstName(line.split(\",\")[0]);\r\n                registrant.setLastName(line.split(\",\")[1]);\r\n                registrant.setSsn(line.split(\",\")[2]);\r\n                registrant.setLogin(line.split(\",\")[3]);\r\n                if (line.split(\",\")[4] != null) {\r\n                    String id = line.split(\",\")[4];\r\n                    boolean flag = true;\r\n                    for (int i = 0; i < id.length(); i++) {\r\n                        if (id.charAt(i) >= '0' && id.charAt(i) <= '9') {\r\n                            flag = true;\r\n                        } else {\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (flag)\r\n                        registrant.setId(Integer.parseInt(line.split(\",\")[4]));\r\n                }\r\n                if (line.split(\",\")[5] != null)\r\n                    registrant.setEmail(line.split(\",\")[5]);\r\n\r\n                list.add(registrant);\r\n\r\n                line = br.readLine();\r\n\r\n            }\r\n\r\n        } catch (Exception e) {\r\n\r\n            e.printStackTrace();\r\n\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n\r\n    public static List<Object> returnAppointmentIDsList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n\r\n                Appointment appointment = new Appointment();\r\n                appointment.setId(Integer.parseInt(line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(appointment.getId());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n\r\n    public static List<Object> returnAppointmentStartDateList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Appointment appointment = new Appointment();\r\n                appointment.setStartDate((line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(appointment.getStartDate());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n    public static List<Object> returnAppointmentEndDateList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Appointment appointment = new Appointment();\r\n                appointment.setEndDate((line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(appointment.getEndDate());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n    public static List<Object> returnAppointmentStatusList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Appointment appointment = new Appointment();\r\n                appointment.setStatus((line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(appointment.getStatus());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n\r\n    public static List<Object> returnAppointmentNameList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Appointment appointment = new Appointment();\r\n                appointment.setStatus((line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(appointment.getStatus());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n    public static List<Object> returnStaffIDsList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n\r\n                Staff staff = new Staff();\r\n                staff.setId(Integer.parseInt(line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(staff.getId());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n    public static List<Object> returnStaffEmailList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Staff staff = new Staff();\r\n                staff.setStatus((line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(staff.getStatus());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n\r\n\r\n    public static List<Object> returnPhysicianIDsList(String filePath) {\r\n\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Physician physician = new Physician();\r\n                physician.setId(Integer.parseInt(line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(physician.getId());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    public static List<Object> returnTestItemsIDList(String filePath) {\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n\r\n                CTestItem ctestItem = new CTestItem();\r\n                ctestItem.setId(Integer.parseInt(line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(ctestItem.getId());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\npublic static List<Object> returnRoomIDsList(String filePath) {\r\n\r\n        List<Object> all = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = br.readLine();\r\n            System.out.println(line);\r\n            int i = 0;\r\n            while (line != null) {\r\n                Room room = new Room();\r\n                room.setId(Integer.parseInt(line.split(\",\")[0]));\r\n                sb.append(System.lineSeparator());\r\n                line = br.readLine();\r\n                all.add(room.getId());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return all;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/utilities/ReadTxt.java b/src/test/java/utilities/ReadTxt.java
--- a/src/test/java/utilities/ReadTxt.java	(revision 7ecb7bf25842756a5603270378bb289ad646239b)
+++ b/src/test/java/utilities/ReadTxt.java	(date 1661805188657)
@@ -336,7 +336,7 @@
 
 
 
-}
+
 
 
 
